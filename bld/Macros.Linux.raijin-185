#==============================================================================
# Makefile macros for xe.nci.org.au, an SGI ALTIX system running Linux
# Note:  Use the -mp flag if precision is critical.   It slows down the 
#        code by 25% (or more).
#==============================================================================

INCLDIR    := -I.
SLIBS      :=
ULIBS      := 
CPP        := /usr/bin/cpp
CPPFLAGS   := -P -traditional
CPPDEFS    := -DLINUX -DPAROPT
ifeq ($(DEBUG), yes)
    CFLAGS     := -c -g -O0
else
    CFLAGS     := -c -O2
endif
FIXEDFLAGS := -132
FREEFLAGS  := 
FC         := mpifort
# work-around for gc to ensure that denormailzed numbers are 
# flushed to zero: -march=pentium4 -msse2 -mfpmath=sse
#FFLAGS     := -O2 -w -fdefault-real-8 -msse2 -mfpmath=sse -fconvert=big-endian
#FFLAGS     := -r8 -i4 -O2 -align all -w -ftz -convert big_endian -assume byterecl -no-vec -mcmodel=medium
#FFLAGS     := -r8 -i4 -g -O0 -align all -w -ftz -convert big_endian -assume byterecl -no-vec -mcmodel=medium
ifeq ($(DEBUG), yes)
    FFLAGS     := -r8 -i4 -O0 -g -align all -w -ftz -convert big_endian -assume byterecl -no-vec -mcmodel=medium -xHost -fp-model precise
else
    FFLAGS     := -r8 -i4 -O2 -align all -w -ftz -convert big_endian -assume byterecl -no-vec -mcmodel=medium -xHost -fp-model precise -assume buffered_io -check noarg_temp_created
endif
MOD_SUFFIX := mod
LD         := $(FC)
LDFLAGS    := $(FFLAGS) -v #-static-intel 

    CPPDEFS :=  $(CPPDEFS) -DNXGLOB=$(NXGLOB) -DNYGLOB=$(NYGLOB) -DN_ILYR=$(N_ILYR) \
                -DNUMIN=$(NUMIN) -DNUMAX=$(NUMAX) \
                -DTRAGE=$(TRAGE) -DTRFY=$(TRFY) -DTRLVL=$(TRLVL) \
                -DTRPND=$(TRPND) -DNTRAERO=$(NTRAERO) -DTRBRI=$(TRBRI) \
                -DNBGCLYR=$(NBGCLYR) -DTRBGCS=$(TRBGCS) \
                -DNICECAT=$(NICECAT) -DNICELYR=$(NICELYR) \
                -DNSNWLYR=$(NSNWLYR) \
                -DBLCKX=$(BLCKX) -DBLCKY=$(BLCKY) -DMXBLCKS=$(MXBLCKS)
#   CPPDEFS :=  $(CPPDEFS) -DAOMIP
#   CPPDEFS :=  $(CPPDEFS)  -DAOMIP

ifeq ($(COMMDIR), mpi)
   SLIBS   :=  $(SLIBS) $(OPENMPI_F90LIBS)
endif

ifeq ($(DITTO), yes)
   CPPDEFS :=  $(CPPDEFS) -DREPRODUCIBLE
endif

ifeq ($(IO_TYPE), netcdf)
   CPPDEFS := $(CPPDEFS) -Dncdf
   INCLDIR := $(INCLDIR) -I$(NETCDF_ROOT)/include

   SLIBS   := $(SLIBS) -L$(NETCDF_ROOT)/lib -lnetcdf -lnetcdff
endif

ifeq ($(USE_ESMF), yes)
   CPPDEFS :=  $(CPPDEFS) -Duse_esmf
   INCLDIR :=  $(INCLDIR) -I ???
   SLIBS   :=  $(SLIBS) -L ??? -lesmf -lcprts -lrt -ldl
endif

ifeq ($(AusCOM), yes)
   CPPDEFS := $(CPPDEFS) -DAusCOM -Dcoupled
   INCLDIR := $(INCLDIR) $(CPL_INCS)
   SLIBS   := $(SLIBS) -L$(CPLLIBDIR) -lpsmile.${CHAN}
   SLIBS   := $(SLIBS) -L$(CPLLIBDIR) -lmct
   SLIBS   := $(SLIBS) -L$(CPLLIBDIR) -lmpeu
   SLIBS   := $(SLIBS) -L$(CPLLIBDIR) -lscrip
#B: for coupled AusCOM, mpi lib is ALWAYS required:
#   SLIBS   := $(SLIBS) -L$(CPLLIBDIR) $(OMPI_F90LIBS)
#   SLIBS   := $(SLIBS) -L$(CPLLIBDIR) -lmpi
#B: and, somehow the netcdf lib must be put behind the psmile lib:
#   SLIBS   := $(SLIBS) -lnetcdf
   #SLIBS   := $(SLIBS) -L$(NETCDF_ROOT)/lib -lnetcdf
   SLIBS   := $(SLIBS) -L$(NETCDF_ROOT)/lib/Intel -lnetcdf

endif

ifeq ($(ACCESS), yes)
   CPPDEFS := $(CPPDEFS) -DACCESS
endif
# standalone CICE with AusCOM mods
ifeq ($(ACCICE), yes)
   CPPDEFS := $(CPPDEFS) -DACCICE
endif
# no MOM just CICE+UM
ifeq ($(NOMOM), yes)
   CPPDEFS := $(CPPDEFS) -DNOMOM
endif
ifeq ($(OASIS3_MCT), yes)
   CPPDEFS := $(CPPDEFS) -DOASIS3_MCT
endif
